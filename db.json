{
    "categories": [
        {
            "id": 1,
            "name": "Information Technologies",
            "picture": "../assets/img/categories/IT.png",
            "order": 1
        },
        {
            "id": 2,
            "name": "Sport",
            "picture": "../assets/img/categories/Sport.png",
            "order": 2
        },
        {
            "id": 2,
            "name": "Dance",
            "picture": "../assets/img/categories/Dance.png",
            "order": 3
        }                 
    ],
    "videos": [
        {
            "id": 1,
            "title": "JUnit 5 Basics 1 - Introduction and agenda",
            "youtubeId": "2E3WqYupx7c",
            "rating": 5,
            "description": "JUnit 5 Basics is an introduction to the JUnit Jupiter testing framework. JUnit is the defacto standard for testing in Java. learn about how to use JUnit to write effective tests. Understand the features of JUnit including the `@Test` annotation, assertion APIs, test lifecycle and controlling executions."
        },
        {
            "id": 2,
            "title": "JUnit 5 Basics 2 - Why write tests",
            "youtubeId": "kp6ei9mEggc",
            "rating": 4.8,
            "description": "JUnit 5 Basics is an introduction to the JUnit Jupiter testing framework. JUnit is the defacto standard for testing in Java. learn about how to use JUnit to write effective tests. Understand the features of JUnit including the `@Test` annotation, assertion APIs, test lifecycle and controlling executions."
        },
        {
            "id": 3,
            "title": "JUnit 5 Basics 3 - Why do we need a testing framework",
            "youtubeId": "deMlViVF-mE",
            "rating": 4.1,
            "description": "JUnit 5 Basics is an introduction to the JUnit Jupiter testing framework. JUnit is the defacto standard for testing in Java. learn about how to use JUnit to write effective tests. Understand the features of JUnit including the `@Test` annotation, assertion APIs, test lifecycle and controlling executions."
        },
        {
            "id": 4,
            "title": "JUnit 5 Basics 4 - Why JUnit 5",
            "youtubeId": "sQ4KgrxGQSc",
            "rating": 3.6,
            "description": "JUnit 5 Basics is an introduction to the JUnit Jupiter testing framework. JUnit is the defacto standard for testing in Java. learn about how to use JUnit to write effective tests. Understand the features of JUnit including the `@Test` annotation, assertion APIs, test lifecycle and controlling executions."
        },
        {
            "id": 5,
            "title": "JUnit 5 Basics 5 - JUnit 5 Architecture",
            "youtubeId": "1xRcRYKOTHs",
            "rating": 3.9,
            "description": "JUnit 5 Basics is an introduction to the JUnit Jupiter testing framework. JUnit is the defacto standard for testing in Java. learn about how to use JUnit to write effective tests. Understand the features of JUnit including the `@Test` annotation, assertion APIs, test lifecycle and controlling executions."
        },
        {
            "id": 6,
            "title": "JUnit 5 Basics 6 - Creating a new JUnit 5 Maven project",
            "youtubeId": "09ZZiNgUPVU",
            "rating": 4.8,
            "description": "JUnit 5 Basics is an introduction to the JUnit Jupiter testing framework. JUnit is the defacto standard for testing in Java. learn about how to use JUnit to write effective tests. Understand the features of JUnit including the `@Test` annotation, assertion APIs, test lifecycle and controlling executions."
        }
    ]
}